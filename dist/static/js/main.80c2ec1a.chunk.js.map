{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","catch","err","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","CreateProject","createProject","history","push","name","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80c2ec1a.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New project</NavLink></li>\n            <li><a onClick={props.signOut}>Logout</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return(dispatch,getState,{getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'SIGNOUT_ERROR'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return(dispatch, getState,{getFirebase,getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstname,\n                lastName: newUser.lastname,\n                initials: newUser.firstname[0] + newUser.lastname[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'SIGNUP_ERROR',err})\n        })\n    }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n  const {auth,profile} = props\n  const links = auth.uid ? <SignedInLinks profile = {profile}/> : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">KMPlan</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map((item) => {\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title \">{project.title}</span>\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n      </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      <ul>\n        {projects && projects.map(project => {\n          return(\n            <li key={project.id}>\n            <Link to={\"/project/\"+project.id}>\n            <ProjectSummary project={project} key={project.id} />\n            </Link>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default ProjectList","import React, {Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from './../projects/ProjectList'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component{\n    render(){\n        const {projects,auth,notifications} = this.props;\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}></ProjectList>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}></Notifications>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Add data (state) from reducers to props of this component\nconst mapStateToProps = (state) => {\n    return{\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy:['createdAt','desc']},\n        {collection: 'notifications', limit: 3, orderBy:['time','desc']}\n    ])\n)(Dashboard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) =>{\n    const {project, auth} = props\n    if(!auth.uid) return <Redirect to='/signin'/>\n    if(project){\n        return(\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    else{\n        return(\n            <div className=\"container center\">\n                <p>Loading project....</p>\n            </div>\n        )\n    }\n}\nconst mapStatetoProps = (state,ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id]: null;\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nclass SignIn extends Component{\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render(){\n        const {authError,auth} = this.props;\n        if(auth.uid){\n            return <Redirect to='/'/>\n        }\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    </div>\n                    <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component{\n    state = {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        password: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    render(){\n        const {auth, authError} = this.props;\n        if(auth.uid){\n            return <Redirect to='/'/>\n        }\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstname\">First Name</label>\n                        <input type=\"text\" id=\"firstname\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastname\">Last Name</label>\n                        <input type=\"text\" id=\"lastname\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                    </div>\n                    <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, {Component} from 'react'\nimport {createProject} from '../../store/actions/projectActions' \nimport {connect} from 'react-redux' \nimport {Redirect} from 'react-router-dom'\n\nclass CreateProject extends Component{\n    state = {\n        title:\"\",\n        content:\"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        /* similar to redirect*/\n        this.props.history.push('/')\n    }\n    render(){\n        const {auth} = this.props;\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return(dispatch, getState, {getFirebase, getFirestore}) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\n        })\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}></Route>\n          <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n          <Route path=\"/signin\" component = {SignIn}></Route>\n          <Route path=\"/signup\" component = {SignUp}></Route>\n          <Route path=\"/create\" component = {CreateProject}></Route>\n        </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState,action) =>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('logout success');\n            return state;\n        case 'SIGNOUT_ERROR':\n            console.log('logout error');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: []\n}\n\nconst projectReducer = (state = initState,action) =>{\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project)\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyDrLWk-HW35crvuA_xy8qnu-gXt4pMQrqQ\",\n    authDomain: \"kmplan-765d9.firebaseapp.com\",\n    databaseURL: \"https://kmplan-765d9.firebaseio.com\",\n    projectId: \"kmplan-765d9\",\n    storageBucket: \"kmplan-765d9.appspot.com\",\n    messagingSenderId: \"219212373725\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true})\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}